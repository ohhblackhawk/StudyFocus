// Generated by Dagger (https://dagger.dev).
package com.example.studyfocus.ui.data.repositories;

import com.example.studyfocus.ui.data.classes.TaskDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class RepositoryModule_ProvideTaskRepositoryFactory implements Factory<TaskRepository> {
  private final Provider<TaskDao> taskDaoProvider;

  public RepositoryModule_ProvideTaskRepositoryFactory(Provider<TaskDao> taskDaoProvider) {
    this.taskDaoProvider = taskDaoProvider;
  }

  @Override
  public TaskRepository get() {
    return provideTaskRepository(taskDaoProvider.get());
  }

  public static RepositoryModule_ProvideTaskRepositoryFactory create(
      Provider<TaskDao> taskDaoProvider) {
    return new RepositoryModule_ProvideTaskRepositoryFactory(taskDaoProvider);
  }

  public static TaskRepository provideTaskRepository(TaskDao taskDao) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideTaskRepository(taskDao));
  }
}
