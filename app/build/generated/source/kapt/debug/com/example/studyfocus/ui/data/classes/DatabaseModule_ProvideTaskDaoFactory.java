// Generated by Dagger (https://dagger.dev).
package com.example.studyfocus.ui.data.classes;

import com.example.studyfocus.ui.data.AppDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class DatabaseModule_ProvideTaskDaoFactory implements Factory<TaskDao> {
  private final Provider<AppDatabase> appDatabaseProvider;

  public DatabaseModule_ProvideTaskDaoFactory(Provider<AppDatabase> appDatabaseProvider) {
    this.appDatabaseProvider = appDatabaseProvider;
  }

  @Override
  public TaskDao get() {
    return provideTaskDao(appDatabaseProvider.get());
  }

  public static DatabaseModule_ProvideTaskDaoFactory create(
      Provider<AppDatabase> appDatabaseProvider) {
    return new DatabaseModule_ProvideTaskDaoFactory(appDatabaseProvider);
  }

  public static TaskDao provideTaskDao(AppDatabase appDatabase) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideTaskDao(appDatabase));
  }
}
